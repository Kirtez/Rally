material fysik
{
        receive_shadows on
	technique
	{
		// First base ambient light pass
		pass
		{
			lighting on
			ambient 0.4 0.4 0.4
			diffuse 0.4 0.4 0.4
		}
		
		// Bump map light pass	
		pass
		{
			// base colours, not needed for rendering, but as information
			// to lighting pass categorisation routine
			ambient 0 0 0

			// do this for each light
			iteration once_per_light
		
			scene_blend add

			// Vertex program reference
			vertex_program_ref Examples/BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref Examples/BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			
			// Base bump map
			texture_unit
			{
				texture fysiknorm.png
				colour_op 
			}			
		}

		//Texture pass: Texture multiplied by amount of light from bump map pass
		pass
		{
			lighting off
			scene_blend modulate
			texture_unit
			{
				texture fysik.png
			}
		}
                pass
      		{
       	 	ambient 0.5 0.5 0.5
        	diffuse 0.6 0.6 0.6
        	specular 1 1 1 1 128
		emissive 0 0 0
		alpha_rejection greater 1
        	lighting on
		scene_blend alpha_blend
       	 	texture_unit
	 		{
         	texture fysikspec.png
  
       	colour_op modulate
         		}

      		}  

	}
}

